swagger: '2.0'
info:
    title: Sunglasses.io
    description: An API to support the Sunglasses-io platform
    version: 1.0.0
host: api.sunglasses.com
schemes:
    - https
basePath: /v1
produces:
    - application/json
tags:
    - name: 'Store'
      description: 'Accessing the sunglasses products'
    - name: 'User'
      description: 'Operations for the User'

paths:
    /store/brands:
        get:
            tags:
                - 'Store'
            summary: 'Returns Brands of sunglasses sold by store'
            description: 'Returns a list of brands available'
            responses:
                200:
                    description: Succesfull Request
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/Brand'
    /store/brands/{Id}/products:
        get:
            tags:
                - 'Store'
            summary: 'Returns products by brand'
            description: 'Returns all products associated with a certain brand ID'
            parameters:
                - name: Id
                  in: path
                  description: ID of sunglasses brand to be fetched
                  required: true
                  type: string
            responses:
                200:
                    description: Successful Request
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/Product'
                404:
                    description: Item not found
    /store/products:
        get:
            tags:
                - 'Store'
            summary: Returns all items in the store
            description: Returns a list of all items in the store
            parameters:
                - name: query
                  in: query
                  required: false
                  type: string
            responses:
                200:
                    description: Successful Request
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/Product'
                404:
                    description: Inventory not found
    /login:
        post:
            tags:
                - 'User'
            summary: User Login
            description: Logs in the user and returns access token
            parameters:
                - in: body
                  name: credentials
                  required: true
                  schema:
                      $ref: '#/definitions/Credentials'
            responses:
                200:
                    description: Successful Login
                    schema:
                        $ref: '#/definitions/LoginResponse'
                400:
                    description: Invalid username or password
                401:
                    description: Unauthorized - Invalid Credentials Format
    /me/cart:
        get:
            tags:
                - 'User'
            summary: Get Users shopping cart
            description: Returns the current users shopping cart
            parameters:
                - name: accessToken
                  in: query
                  required: true
                  type: string
            responses:
                200:
                    description: Successful Request
                    schema:
                        type: array
                        items:
                            $ref: '#/definitions/CartItem'
                401:
                    description: Unauthorized - User not authenticated. Please sign in
        post:
            tags:
                - 'User'
            summary: Adds an item to the cart
            description: Adds an item to the current users cart
            parameters:
                - name: accessToken
                  in: query
                  required: true
                  type: string
                - in: body
                  name: product
                  required: true
                  schema:
                      type: object
            responses:
                200:
                    description: Successful Post
                401:
                    description: Unauthorized - User not authenticated
                404:
                    description: Item not found
    /me/cart/{productId}:
        delete:
            tags:
                - 'User'
            summary: Remove item from the cart
            description: Removes selected item from the current users cart
            parameters:
                - name: accessToken
                  in: query
                  required: true
                  type: string
                - name: productId
                  in: path
                  required: true
                  type: integer
                  format: int64
            responses:
                200:
                    description: Item successfully removed from cart
                401:
                    description: Unauthorized - User not authenticated
        put:
            tags:
                - 'User'
            summary: Update quantity of item in cart
            description: Update the quantity of a specific item in the current users cart
            parameters:
                - name: accessToken
                  in: query
                  required: true
                  type: string
                - name: productId
                  in: path
                  required: true
                  type: string
                - name: body
                  in: body
                  required: true
                  schema:
                      type: object
            responses:
                200:
                    description: Successful Request
                401:
                    description: Unauthorized - User not authenticated
                404:
                    description: Item not found or Item not in cart
                400:
                    description: Quantity must be at least 1
definitions:
    Brand:
        type: object
        properties:
            id:
                type: string
            name:
                type: string

    Product:
        type: object
        properties:
            id:
                type: string
            categoryId:
                type: string
            name:
                type: string
            description:
                type: string
            price:
                type: number
            imageUrls:
                type: array
                items:
                    type: string

    Credentials:
        type: object
        required:
            - username
            - password
        properties:
            username:
                type: string
            password:
                type: string

    LoginResponse:
        type: object
        properties:
            accessToken:
                type: string

    CartItem:
        type: object
        properties:
            productId:
                type: string
            quantity:
                type: integer
